apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: argocd-sync
  annotations:
    workflows.argoproj.io/description: >-
      This task syncs (deploys) an Argo CD application.

      To do so, it requires the address of the Argo CD server and some form of
      authentication either a username/password or an authentication token.
    workflows.argoproj.io/tags: argocd
spec:
  entrypoint: argocd-sync
  templates:
  - name: argocd-sync
    inputs:
      parameters:
      - name: argocd-version
        value: v2.7.3
      - name: application-name
      - name: revision
        value: HEAD
      - name: flags
        value: --
      - name: argocd-server-address
        value: dev-argocd.huray.io
      - name: argocd-credentials-secret
        value: argocd-appsync
    script:
      image: argoproj/argocd:{{inputs.parameters.argocd-version}}
      command: [bash]
      env:
        - name: ARGOCD_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: "{{inputs.parameters.argocd-credentials-secret}}"
              key: token
              optional: true
        - name: ARGOCD_USERNAME
          valueFrom:
            secretKeyRef:
              name: "{{inputs.parameters.argocd-credentials-secret}}"
              key: username
              optional: true
        - name: ARGOCD_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{inputs.parameters.argocd-credentials-secret}}"
              key: password
              optional: true
        - name: ARGOCD_SERVER
          value: "{{inputs.parameters.argocd-server-address}}"
      source: |
        #!/bin/bash

        set -euo pipefail

        if [[ -z $ARGOCD_AUTH_TOKEN ]] && [[ -z "$ARGOCD_USERNAME" || -z "$ARGOCD_PASSWORD" ]]; then
          echo "Either the ARGOCD_AUTH_TOKEN must be specified, or the ARGOCD_USERNAME/ARGOCD_PASSWORD must be specified."
          exit 1
        fi 

        if [ -z $ARGOCD_AUTH_TOKEN ]; then
          yes | argocd login "$ARGOCD_SERVER" --username=$ARGOCD_USERNAME --password=$ARGOCD_PASSWORD {{inputs.parameters.flags}}
        fi

        echo "Running as ArgoCD User:"
        argocd --grpc-web account get-user-info {{inputs.parameters.flags}}
        
        argocd --grpc-web app sync {{inputs.parameters.application-name}} --revision {{inputs.parameters.revision}} --async
